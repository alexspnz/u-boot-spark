
	POKE_LONG  (0x57014010, 0x03FF5F20)

	/* Configure PLL 1 */
	OR_LONG    (0x56000000, 1 << 30)
	OR_LONG    (0x56000000, 1 << 29)
	UPDATE_LONG(0x56000000, 0xE0000000, 0x3 | (0x28 << 8))
	OR_LONG    (0x56000000, 1 << 24)
	UPDATE_LONG(0x56000000, 0xFEFFFFFF, 0)
	UPDATE_LONG(0x56000000, 0xDFFFFFFF, 0)
	WHILE_NE   (0x56000000, 0x80000000, 0x80000000)

	POKE_LONG  (0x56000048, 0x00000001)
	OR_LONG    (0x56000048, 1 << 6)

	UPDATE_LONG(0x56000000,0xBFFFFFFF,0)

	/* Configure PLL 2 */
	OR_LONG    (0x56001000, 1 << 29)
	UPDATE_LONG(0x56001000, 0xE0000000, 0x9 | (0x28 << 8))
	OR_LONG    (0x56001000, 1 << 24)
	UPDATE_LONG(0x56001000, 0xFEFFFFFF, 0)
	UPDATE_LONG(0x56001000, 0xDFFFFFFF, 0)
	WHILE_NE   (0x56001000, 0x80000000, 0x80000000)

	POKE_LONG  (0x540A4020, 0x00000000)
	POKE_LONG  (0x540A4030, 0x00000030)
	POKE_LONG  (0x540A4040, 0x00000000)
	POKE_LONG  (0x540A4000, 0x00000000)

	/* Configure EMI for 16-bit data */
	POKE_LONG  (0x47000860, 0x00000002)
	POKE_LONG  (0x47000800, 0x00000000)
	POKE_LONG  (0x47000810, 0x00000014)

	/* Configure Bank0 */
	POKE_LONG  (0x47000100, 0x0043016D1)
	POKE_LONG  (0x47000108, 0x9D112200)
	POKE_LONG  (0x47000110, 0x9D112200)

	POKE_LONG  (0x47000118, 0x00000000)

	/* Configure Bank1 for Atapi */
	POKE_LONG  (0x47000140, 0x00138791)
	POKE_LONG  (0x47000148, 0x13123200)
	POKE_LONG  (0x47000150, 0x1F123202)
	POKE_LONG  (0x47000158, 0x00000000)

	OR_LONG    (0x47000028, (1 << 9) | (1 << 8) | (1<<24)|(1<<23) |(1<<26) )

	POKE_LONG  (0X540A4000, 0x10)

	POKE_LONG  (0x540A3000, 0x00000030)

	/* Reset DLL's */
	OR_LONG    (0x5F000028, (1 << 1) | 1)

	UPDATE_LONG(0x5F000028, 0xFFFFFFFC, 0)

	WHILE_NE   (0x5F000040, 0x3, 0x3)

	/* Configuring SYSCONF Registers */
	OR_LONG    (0x50003014, 1 << 9)
	OR_LONG    (0x50003018, (1 << 23) | (1 << 18))
	OR_LONG    (0x5000301C, (1 << 6) | (1 << 1))

	/* Configure LMI COC */
	UPDATE_LONG(0x5F000028, 0xFFF01FFF, (3 << 18) | (1 << 13))
	UPDATE_LONG(0x5F000028, 0xFFFFFE03, (3 << 7) | (1 << 2))

	/* Configuring LMI for 32-bit data, CAS 3 */
	POKE_LONG  (0x5F000008, 0x0514025B)
	POKE_LONG  (0x5F00000C, 0x00000000)
	POKE_LONG  (0x5F000018, 0x35B06455)
	POKE_LONG  (0x5F000030, 0x84001900)
	POKE_LONG  (0x5F000038, 0x84001900)

	POKE_LONG  (0x5F000010, 0x00000003)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00000002)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000048, 0x00000400)
	POKE_LONG  (0x5F000050, 0x00000400)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000048, 0x00000133)
	POKE_LONG  (0x5F000050, 0x00000133)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00000002)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00000004)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00000004)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000048, 0x00000033)
	POKE_LONG  (0x5F000050, 0x00000033)
	POKE_LONG  (0x5F000010, 0x00000001)
	POKE_LONG  (0x5F000010, 0x00040000)

	/* Configuring ST230 */
	POKE_LONG  (0x52000248, 132)

	/* Configuring Frequency Synthesiser */
	POKE_LONG  (0x56002000, 0x00001F0D)
	POKE_LONG  (0x56002028, 0x06639091)

	/* ClockOut can be found on J6 Or Con18,Pin25 */
	POKE_LONG  (0x540A2020, 0x00000000)
	POKE_LONG  (0x540A2030, 0x00000080)
	POKE_LONG  (0x540A2040, 0x00000000)

	OR_LONG    (0x50003010, 1 << 11)
	OR_LONG    (0x50003014, 7 << 10)

	POKE_LONG  (0x540A3000, 0x00000000)


