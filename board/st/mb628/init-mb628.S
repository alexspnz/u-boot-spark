/*
 * The poke table is a series of long words, in the format
 *
 *	opcode, address, operand, ...
 *
 * An opcode of 0 marks the table end
 */


#include "asm/stx7141reg.h"
#include "../../../cpu/st40/init_ram.S"


	.section .data.init, "a"

	.balign 32

__memory_setup_table:

	/*
	 * include the appropriate set of "GDB pokes", (usually) generated
	 * using the "romgen" utility, from a known good target-pack.
	 *
	 * This file may be regenerated by executing the following
	 * command (redirecting the output), *without* needing any
	 * access to either a MicroConnect or a target board:
	 *
	 * host% romgen --show-comment dummy:mb628:estb
	 *
	 * Where "dummy" need not correspond to any real IP address on
	 * your network.  In addition, note that "mb628" should
	 * substituted if you have a custom target-pack connect command.
	 *
	 * Note: The connect command used with "romgen", should connect
	 * only in 29-bit mode - even if U-Boot will be built for 32-bit mode.
	 * That is, do not use the "seuc=1" (or similar) option with "romgen".
	 */
#include "mb628-stx7141.romgen"

#ifdef CONFIG_ST40_SE_MODE
	/*
	 * Note that we also manually need to move the LMI0 and LMI1 base addresses to
	 * their 32-bit SE mode locations as defined in the datasheet and change the
	 * 'upper bound addresses' (in row attribute registers) for the LMIs.
	 */
	UPDATE32(STX7141_SYSCONF_SYS_CFG38, 0xFFFFFF00, 0x00000040)
	UPDATE32(STX7141_SYSCONF_SYS_CFG39, 0xFFFFFF00, 0x00000080)
	UPDATE32(ST40_LMI_SDRA0_0(0), 0x001FFFFF, 0x48000000)
	UPDATE32(ST40_LMI_SDRA1_0(0), 0x001FFFFF, 0x48000000)
	UPDATE32(ST40_LMI_SDRA0_0(1), 0x001FFFFF, 0x88000000)
	UPDATE32(ST40_LMI_SDRA1_0(1), 0x001FFFFF, 0x88000000)
#endif	/* CONFIG_ST40_SE_MODE */

	END_MARKER

__memory_setup_table_end:

	.end
