#include "asm/fli7510reg.h"
#include "../../../cpu/sh/init_ram.S"

/*
 * The poke table is a series of long words, in the format
 *
 *	opcode, address, operand, ...
 *
 * An opcode of 0 marks the table end
 */

/*
 * For compatibility with old poke table code, we define some of the
 * new names, to map onto the old names. Ultimately, the old poke table
 * code will be updated to the "new order", and we can just delete
 * the following mappings.
 */
#define POKE8(A, VAL)				POKE_CHAR(A, VAL)
#define POKE16(A, VAL)				POKE_SHORT(A, VAL)
#define POKE32(A, VAL)				POKE_LONG(A, VAL)
#define OR32(A, VAL)				OR_LONG(A, VAL)
#define UPDATE32(A, AND, OR)			UPDATE_LONG(A, AND, OR)
#define POKE_UPDATE32(A1, A2, AND, SHIFT, OR)	POKE_UPDATE_LONG(A1, A2, AND, SHIFT, OR)
#define WHILE_NE32(A, AND, VAL)			WHILE_NE(A, AND, VAL)
#define DELAY(VAL)				/* do nothing */


	.section .data.init, "a"

	.balign 32

__memory_setup_table:


	/*
	 * include the appropriate set of "GDB pokes", (usually) generated
	 * using the "romgen" utility, from a known good target-pack.
	 *
	 * This file may be regenerated by connecting your specific board
	 * to an STMC2 (note: currently it must be version 2) and then
	 * executing the following command (redirecting the output):
	 *
	 * host% romgen --target-connect --show-comment <stmc2>:fldb_gpd201:st40host,boot_companions=0
	 *
	 * Where "<stmc2>" should be replaced with the IP address
	 * (or the DNS name) of the STMC2 box.  Also the "fldb_gpd201" should
	 * substituted if you have a custom target-pack connect command.
	 *
	 * Note: The connect command used with "romgen", should connect
	 * only in 29-bit mode - even though U-Boot will be built for 32-bit mode.
	 * That is, do not use the "seuc=1" (or similar) option with "romgen".
	 */
#include "fli7510.romgen"


#if 1	/* QQQ - DELETE once the targetpack sets up the EMI properly */
POKE32(0xfd100860, 0x00000002)		/* st40_emi_regs.EMI_BANK_ENABLE */
POKE32(0xfd100800, 0x00000000)		/* st40_emi_regs.EMI_BANK0_BASEADDRESS */
POKE32(0xfd100810, 0x00000008)		/* st40_emi_regs.EMI_BANK1_BASEADDRESS */
POKE32(0xfd100820, 0x00000010)		/* st40_emi_regs.EMI_BANK2_BASEADDRESS */
POKE32(0xfd100830, 0x00000014)		/* st40_emi_regs.EMI_BANK3_BASEADDRESS */
POKE32(0xfd100840, 0x0000001c)		/* st40_emi_regs.EMI_BANK4_BASEADDRESS */

POKE32(0xfd100100, 0x001126d1)		/* st40_emi_regs.EMI_BANK0_EMICONFIGDATA0 */
POKE32(0xfd100108, 0x8d200000)		/* st40_emi_regs.EMI_BANK0_EMICONFIGDATA1 */
POKE32(0xfd100110, 0x9a200000)		/* st40_emi_regs.EMI_BANK0_EMICONFIGDATA2 */
POKE32(0xfd100118, 0x0400021d)		/* st40_emi_regs.EMI_BANK0_EMICONFIGDATA3 */

POKE32(0xfd100140, 0x001126d1)		/* st40_emi_regs.EMI_BANK1_EMICONFIGDATA0 */
POKE32(0xfd100148, 0x8d200000)		/* st40_emi_regs.EMI_BANK1_EMICONFIGDATA1 */
POKE32(0xfd100150, 0x9a200000)		/* st40_emi_regs.EMI_BANK1_EMICONFIGDATA2 */
POKE32(0xfd100158, 0x0400021d)		/* st40_emi_regs.EMI_BANK1_EMICONFIGDATA3 */
#endif	/* QQQ - DELETE once the targetpack sets up the EMI properly */

	END_MARKER

__memory_setup_table_end:

	.end
