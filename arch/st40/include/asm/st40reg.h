/*
 * Copyright (C) STMicroelectronics Ltd. 2002, 2003, 2007-2013
 *
 * andy.sturges@st.com
 * Sean McGoogan <Sean.McGoogan@st.com>
 *
 * See file CREDITS for list of people who contributed to this
 * project.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 * MA 02111-1307 USA
 */

/*
 * This is derived from STMicroelectronics gnu toolchain example:
 *   sh-superh-elf/examples/bare/sh4reg/st40reg.h
 */

#ifndef __ARCH_ST40_INCLUDE_ASM_ST40REG_H
#define __ARCH_ST40_INCLUDE_ASM_ST40REG_H

#include "asm/sh4regtype.h"
#include "sh4reg.h"

/*----------------------------------------------------------------------------*/

/*
 * ST40 control registers
 */

/* Clock Pulse Generator control registers (all ST40 variants) */
#define ST40_CPG_FRQCR			SH4_WORD_REG(ST40_CPG_REGS_BASE + 0x00)
#define ST40_CPG_STBCR			SH4_BYTE_REG(ST40_CPG_REGS_BASE + 0x04)
#define ST40_CPG_WTCNT			SH4_WORD_REG(ST40_CPG_REGS_BASE + 0x08)
#define ST40_CPG_WTCNT_R		SH4_BYTE_REG(ST40_CPG_REGS_BASE + 0x08)
#define ST40_CPG_WTCSR			SH4_WORD_REG(ST40_CPG_REGS_BASE + 0x0c)
#define ST40_CPG_WTCSR_R		SH4_BYTE_REG(ST40_CPG_REGS_BASE + 0x0c)
#define ST40_CPG_STBCR2			SH4_BYTE_REG(ST40_CPG_REGS_BASE + 0x10)
#define ST40_CPG_WTCSR2			SH4_WORD_REG(ST40_CPG_REGS_BASE + 0x1c)
#define ST40_CPG_WTCSR2_R		SH4_BYTE_REG(ST40_CPG_REGS_BASE + 0x1c)
#define ST40_CPG_FRQCR2			SH4_WORD_REG(ST40_CPG_REGS_BASE + 0xc0)

/* Parallel I/O control registers (all ST40 variants) */
#define ST40_PIO_POUT(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x00)
#define ST40_PIO_PIN(n)		SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x10)
#define ST40_PIO_PC0(n)		SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x20)
#define ST40_PIO_PC1(n)		SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x30)
#define ST40_PIO_PC2(n)		SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x40)
#define ST40_PIO_PCOMP(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x50)
#define ST40_PIO_PMASK(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x60)

/* PIO pseudo registers */
#define ST40_PIO_SET_POUT(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x04)
#define ST40_PIO_CLEAR_POUT(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x08)
#define ST40_PIO_SET_PC0(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x24)
#define ST40_PIO_CLEAR_PC0(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x28)
#define ST40_PIO_SET_PC1(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x34)
#define ST40_PIO_CLEAR_PC1(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x38)
#define ST40_PIO_SET_PC2(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x44)
#define ST40_PIO_CLEAR_PC2(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x48)
#define ST40_PIO_SET_PCOMP(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x54)
#define ST40_PIO_CLEAR_PCOMP(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x58)
#define ST40_PIO_SET_PMASK(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x64)
#define ST40_PIO_CLEAR_PMASK(n)	SH4_DWORD_REG(ST40_PIO##n##_REGS_BASE + 0x68)

/* Local Memory Interface control registers */
#define ST40_LMI_VCR_0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000000)
#define ST40_LMI_VCR_1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000004)
#define ST40_LMI_VCR(n)		SH4_GWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000000)
#define ST40_LMI_MIM_0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000008)
#define ST40_LMI_MIM_1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x00000c)
#define ST40_LMI_MIM(n)		SH4_GWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000008)
#define ST40_LMI_SCR_0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000010)
#define ST40_LMI_SCR_1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000014)
#define ST40_LMI_SCR(n)		SH4_GWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000010)
#define ST40_LMI_STR_0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000018)
#define ST40_LMI_STR_1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x00001c)
#define ST40_LMI_STR(n)		SH4_GWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000018)
#define ST40_LMI_GCC_0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000028)
#define ST40_LMI_GCC_1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x00002c)
#define ST40_LMI_GCC(n)		SH4_GWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000028)
#define ST40_LMI_SDRA0_0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000030)
#define ST40_LMI_SDRA0_1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000034)
#define ST40_LMI_SDRA0(n)	SH4_GWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000030)
#define ST40_LMI_SDRA1_0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000038)
#define ST40_LMI_SDRA1_1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x00003c)
#define ST40_LMI_SDRA1(n)	SH4_GWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000038)
#define ST40_LMI_CCO_0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000040)
#define ST40_LMI_CCO_1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000044)
#define ST40_LMI_CCO(n)		SH4_GWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000040)
#define ST40_LMI_SDMR0(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000048)
#define ST40_LMI_SDMR1(n)	SH4_DWORD_REG(ST40_LMI##n##_REGS_BASE + 0x000050)

/* Enhanced Flash Memory Interface control registers (all ST40 variants) */
#define ST40_EMI_VCR_0			SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0000)
#define ST40_EMI_VCR_1			SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0004)
#define ST40_EMI_VCR			SH4_GWORD_REG(ST40_EMI_REGS_BASE + 0x0000)
#define ST40_EMI_STATUSCFG		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0010)
#define ST40_EMI_STATUSLOCK		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0018)
#define ST40_EMI_LOCK			SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0020)
#define ST40_EMI_GENCFG			SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0028)
#define ST40_EMI_SDRAMNOPGEN		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0030)
#define ST40_EMI_SDRAMMODEREG		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0038)
#define ST40_EMI_SDRAMINIT		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0040)
#define ST40_EMI_REFRESHINIT		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0048)
#define ST40_EMI_FLASHCLKSEL		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0050)
#define ST40_EMI_SDRAMCLKSEL		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0058)
#define ST40_EMI_MPXCLKSEL		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0060)
#define ST40_EMI_CLKENABLE		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0068)
#define ST40_EMI_BANK0_EMICONFIGDATA0	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0100)
#define ST40_EMI_BANK0_EMICONFIGDATA1	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0108)
#define ST40_EMI_BANK0_EMICONFIGDATA2	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0110)
#define ST40_EMI_BANK0_EMICONFIGDATA3	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0118)
#define ST40_EMI_BANK1_EMICONFIGDATA0	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0140)
#define ST40_EMI_BANK1_EMICONFIGDATA1	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0148)
#define ST40_EMI_BANK1_EMICONFIGDATA2	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0150)
#define ST40_EMI_BANK1_EMICONFIGDATA3	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0158)
#define ST40_EMI_BANK2_EMICONFIGDATA0	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0180)
#define ST40_EMI_BANK2_EMICONFIGDATA1	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0188)
#define ST40_EMI_BANK2_EMICONFIGDATA2	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0190)
#define ST40_EMI_BANK2_EMICONFIGDATA3	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0198)
#define ST40_EMI_BANK3_EMICONFIGDATA0	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x01c0)
#define ST40_EMI_BANK3_EMICONFIGDATA1	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x01c8)
#define ST40_EMI_BANK3_EMICONFIGDATA2	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x01d0)
#define ST40_EMI_BANK3_EMICONFIGDATA3	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x01d8)
#define ST40_EMI_BANK4_EMICONFIGDATA0	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0200)
#define ST40_EMI_BANK4_EMICONFIGDATA1	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0208)
#define ST40_EMI_BANK4_EMICONFIGDATA2	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0210)
#define ST40_EMI_BANK4_EMICONFIGDATA3	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0218)
#define ST40_EMI_BANK5_EMICONFIGDATA0	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0240)
#define ST40_EMI_BANK5_EMICONFIGDATA1	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0248)
#define ST40_EMI_BANK5_EMICONFIGDATA2	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0250)
#define ST40_EMI_BANK5_EMICONFIGDATA3	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0258)

#define ST40_EMI_BASEADDRESS(bank)	SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0800 + (bank)*0x0010)
#define ST40_EMI_BANK0_BASEADDRESS	ST40_EMI_BASEADDRESS(0)
#define ST40_EMI_BANK1_BASEADDRESS	ST40_EMI_BASEADDRESS(1)
#define ST40_EMI_BANK2_BASEADDRESS	ST40_EMI_BASEADDRESS(2)
#define ST40_EMI_BANK3_BASEADDRESS	ST40_EMI_BASEADDRESS(3)
#define ST40_EMI_BANK4_BASEADDRESS	ST40_EMI_BASEADDRESS(4)
#define ST40_EMI_BANK5_BASEADDRESS	ST40_EMI_BASEADDRESS(5)
#define ST40_EMI_BANK_ENABLE		SH4_DWORD_REG(ST40_EMI_REGS_BASE + 0x0860)

/* EMI NAND (HAMMING) flash registers */
#define ST40_EMI_NAND_HAM_REGS_BASE		(ST40_EMI_REGS_BASE + 0x1000)
#define ST40_EMI_NAND_HAM_BOOTBANK_CFG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0000)
#define ST40_EMI_NAND_HAM_RBN_STA		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0004)
#define ST40_EMI_NAND_HAM_INT_EN		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0010)
#define ST40_EMI_NAND_HAM_INT_STA		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0014)
#define ST40_EMI_NAND_HAM_INT_CLR		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0018)
#define ST40_EMI_NAND_HAM_INT_EDGE_CFG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x001c)
#define ST40_EMI_NAND_HAM_CTL_TIMING		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0040)
#define ST40_EMI_NAND_HAM_WEN_TIMING		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0044)
#define ST40_EMI_NAND_HAM_REN_TIMING		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0048)
#define ST40_EMI_NAND_HAM_BLOCK_ZERO_REMAP_REG	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x004C)
#define ST40_EMI_NAND_HAM_FLEXMODE_CFG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0100)
#define ST40_EMI_NAND_HAM_FLEX_MUXCTRL		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0104)
#define ST40_EMI_NAND_HAM_FLEX_CS_ALT		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0108)
#define ST40_EMI_NAND_HAM_FLEX_DATAWRT_CFG	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x010c)
#define ST40_EMI_NAND_HAM_FLEX_DATA_RD_CFG	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0110)
#define ST40_EMI_NAND_HAM_FLEX_CMD		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0114)
#define ST40_EMI_NAND_HAM_FLEX_ADD_REG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0118)
#define ST40_EMI_NAND_HAM_FLEX_DATA		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0120)
#define ST40_EMI_NAND_HAM_VERSION_REG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0144)
#define ST40_EMI_NAND_HAM_ADDRESS_REG_1		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x01E0)
#define ST40_EMI_NAND_HAM_ADDRESS_REG_2		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x01E4)
#define ST40_EMI_NAND_HAM_ADDRESS_REG_3		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x01E8)
#define ST40_EMI_NAND_HAM_MULTI_CS_CONFIG_REG	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x01EC)
#define ST40_EMI_NAND_HAM_SEQ_REG1		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0200)
#define ST40_EMI_NAND_HAM_SEQ_REG2		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0204)
#define ST40_EMI_NAND_HAM_SEQ_REG3		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0208)
#define ST40_EMI_NAND_HAM_SEQ_REG4		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x020c)
#define ST40_EMI_NAND_HAM_ADD			SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0210)
#define ST40_EMI_NAND_HAM_EXTRA_REG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0214)
#define ST40_EMI_NAND_HAM_CMD			SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0218)
#define ST40_EMI_NAND_HAM_SEQ_CFG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x021c)
#define ST40_EMI_NAND_HAM_GEN_CFG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0220)
#define ST40_EMI_NAND_HAM_SEQ_STA		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0240)
#define ST40_EMI_NAND_HAM_ECC_CHECKCODE_0	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0280)
#define ST40_EMI_NAND_HAM_ECC_CHECKCODE_1	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0284)
#define ST40_EMI_NAND_HAM_ECC_CHECKCODE_2	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0288)
#define ST40_EMI_NAND_HAM_ECC_CHECKCODE_3	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x028c)
#define ST40_EMI_NAND_HAM_ECC_CHECKCODE_2X8_0	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0290)
#define ST40_EMI_NAND_HAM_ECC_CHECKCODE_2X8_1	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0294)
#define ST40_EMI_NAND_HAM_ECC_CHECKCODE_2X8_2	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0298)
#define ST40_EMI_NAND_HAM_ECC_CHECKCODE_2X8_3	SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x029C)
#define ST40_EMI_NAND_HAM_DATA_FIFO_REG		SH4_DWORD_REG(ST40_EMI_NAND_HAM_REGS_BASE + 0x0300)

/* Flex-Mode Data {Read,Write} Config Registers & Flex-Mode {Command,Address} Registers */
#define STM_NAND_FLEX_WAIT_RBn			( 1u << 27 )	/* wait for RBn to be asserted (i.e. ready) */
#define STM_NAND_FLEX_BEAT_COUNT_1		( 1u << 28 )	/* One Beat */
#define STM_NAND_FLEX_BEAT_COUNT_2		( 2u << 28 )	/* Two Beats */
#define STM_NAND_FLEX_BEAT_COUNT_3		( 3u << 28 )	/* Three Beats */
#define STM_NAND_FLEX_BEAT_COUNT_4		( 0u << 28 )	/* Four Beats */
#define STM_NAND_FLEX_ADDR_ADD8_VALID		( 1u << 30 )	/* ADDRESS[8] is valid */
#define STM_NAND_FLEX_CSn_STATUS		( 1u << 31 )	/* Deasserts CSn after current operation completes */

/* Flex-Mode Data-{Read,Write} Config Registers */
#define STM_NAND_FLEX_1_BYTE_PER_BEAT		( 0u << 30 )	/* One Byte per Beat */
#define STM_NAND_FLEX_2_BYTES_PER_BEAT		( 1u << 30 )	/* Two Bytes per Beat */

/* Flex-Mode Configuration Register */
#define STM_NAND_FLEX_CFG_ENABLE_FLEX_MODE	( 1u <<  0 )	/* Enable Flex-Mode operations */
#define STM_NAND_FLEX_CFG_ENABLE_AFM		( 2u <<  0 )	/* Enable Advanced-Flex-Mode operations */
#define STM_NAND_FLEX_CFG_SW_RESET		( 1u <<  3 )	/* Enable Software Reset */
#define STM_NAND_FLEX_CFG_CSn_STATUS		( 1u <<  4 )	/* Deasserts CSn in current Flex bank */


/* EMI NAND (BCH) flash registers */
#define ST40_EMI_NAND_BCH_REGS_BASE		(ST40_EMI_NAND_HAM_REGS_BASE)
#define ST40_EMI_NAND_BCH_BOOTBANK_CFG		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x000)
#define ST40_EMI_NAND_BCH_RBN_STA		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x004)
#define ST40_EMI_NAND_BCH_INT_EN		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x010)
#define ST40_EMI_NAND_BCH_INT_STA		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x014)
#define ST40_EMI_NAND_BCH_INT_CLR		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x018)
#define ST40_EMI_NAND_BCH_INT_EDGE_CFG		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x01C)
#define ST40_EMI_NAND_BCH_CTL_TIMING		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x040)
#define ST40_EMI_NAND_BCH_WEN_TIMING		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x044)
#define ST40_EMI_NAND_BCH_REN_TIMING		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x048)
#define ST40_EMI_NAND_BCH_BLOCK_ZERO_REMAP_REG	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x04C)
#define ST40_EMI_NAND_BCH_BOOT_STATUS		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x050)
#define ST40_EMI_NAND_BCH_FALSE_BOOT_REG	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x054)
#define ST40_EMI_NAND_BCH_FALSE_BOOT_STATUS	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x058)
#define ST40_EMI_NAND_BCH_CONTROLLER_CFG	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x100)
#define ST40_EMI_NAND_BCH_FLEX_MUXCTRL		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x104)
#define ST40_EMI_NAND_BCH_FLEX_DATAWRITE_CONFIG	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x10C)
#define ST40_EMI_NAND_BCH_FLEX_DATAREAD_CONFIG	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x110)
#define ST40_EMI_NAND_BCH_VERSION_REG		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x144)
#define ST40_EMI_NAND_BCH_ADDRESS_REG_1		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x1F0)
#define ST40_EMI_NAND_BCH_ADDRESS_REG_2		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x1F4)
#define ST40_EMI_NAND_BCH_ADDRESS_REG_3		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x1F8)
#define ST40_EMI_NAND_BCH_MULTI_CS_CONFIG_REG	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x1FC)
#define ST40_EMI_NAND_BCH_SEQ_REG_1		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x200)
#define ST40_EMI_NAND_BCH_SEQ_REG_2		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x204)
#define ST40_EMI_NAND_BCH_SEQ_REG_3		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x208)
#define ST40_EMI_NAND_BCH_SEQ_REG_4		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x20C)
#define ST40_EMI_NAND_BCH_ADD			SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x210)
#define ST40_EMI_NAND_BCH_EXTRA_REG		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x214)
#define ST40_EMI_NAND_BCH_CMD			SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x218)
#define ST40_EMI_NAND_BCH_GEN_CFG		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x220)
#define ST40_EMI_NAND_BCH_DELAY_REG		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x224)
#define ST40_EMI_NAND_BCH_SEQ_CFG		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x22C)
#define ST40_EMI_NAND_BCH_SEQ_STA		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x270)
#define ST40_EMI_NAND_BCH_DATA_BUFFER_ENTRY_0	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x280)
#define ST40_EMI_NAND_BCH_DATA_BUFFER_ENTRY_1	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x284)
#define ST40_EMI_NAND_BCH_DATA_BUFFER_ENTRY_2	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x288)
#define ST40_EMI_NAND_BCH_DATA_BUFFER_ENTRY_3	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x28C)
#define ST40_EMI_NAND_BCH_DATA_BUFFER_ENTRY_4	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x290)
#define ST40_EMI_NAND_BCH_DATA_BUFFER_ENTRY_5	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x294)
#define ST40_EMI_NAND_BCH_DATA_BUFFER_ENTRY_6	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x298)
#define ST40_EMI_NAND_BCH_DATA_BUFFER_ENTRY_7	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x29C)
#define ST40_EMI_NAND_BCH_ECC_SCORE_REG_A	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x2A0)
#define ST40_EMI_NAND_BCH_ECC_SCORE_REG_B	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x2A4)
#define ST40_EMI_NAND_BCH_CHECK_STATUS_REG_A	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x2A8)
#define ST40_EMI_NAND_BCH_CHECK_STATUS_REG_B	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x2AC)
#define ST40_EMI_NAND_BCH_BUFFER_LIST_PTR	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x300)
#define ST40_EMI_NAND_BCH_SEQ_PTR_REG		SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x304)
#define ST40_EMI_NAND_BCH_ERROR_THRESHOLD_REG	SH4_DWORD_REG(ST40_EMI_NAND_BCH_REGS_BASE + 0x308)

/* EMISS NAND BCH STPLUG Registers (Offsets from EMISS_NAND_DMA) */
#define ST40_EMISS_NAND_RD_DMA_PAGE_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x000)
#define ST40_EMISS_NAND_RD_DMA_MAX_OPCODE_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x004)
#define ST40_EMISS_NAND_RD_DMA_MIN_OPCODE_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x008)
#define ST40_EMISS_NAND_RD_DMA_MAX_CHUNK_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x00C)
#define ST40_EMISS_NAND_RD_DMA_MAX_MESSAGE_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x010)

#define ST40_EMISS_NAND_WR_DMA_PAGE_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x100)
#define ST40_EMISS_NAND_WR_DMA_MAX_OPCODE_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x104)
#define ST40_EMISS_NAND_WR_DMA_MIN_OPCODE_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x108)
#define ST40_EMISS_NAND_WR_DMA_MAX_CHUNK_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x10C)
#define ST40_EMISS_NAND_WR_DMA_MAX_MESSAGE_SIZE	SH4_DWORD_REG(ST40_EMISS_NAND_BCH_DMA_BASE + 0x110)

/* EMI SPI serial flash registers */
#define ST40_EMI_SPI_REGS_BASE			(ST40_EMI_REGS_BASE + 0x2000)
#define ST40_EMI_SPI_CLOCKDIV			SH4_DWORD_REG(ST40_EMI_SPI_REGS_BASE + 0x0010)
#define ST40_EMI_SPI_MODESELECT			SH4_DWORD_REG(ST40_EMI_SPI_REGS_BASE + 0x0018)
#define ST40_EMI_SPI_CONFIGDATA			SH4_DWORD_REG(ST40_EMI_SPI_REGS_BASE + 0x0020)
#define ST40_EMI_SPI_STATUSMODECHANGE		SH4_DWORD_REG(ST40_EMI_SPI_REGS_BASE + 0x0028)

/* Synchronous Serial Controller control registers (all ST40 variants) */
#define ST40_SSC_BRG(n)			SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0000)
#define ST40_SSC_TBUF(n)		SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0004)
#define ST40_SSC_RBUF(n)		SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0008)
#define ST40_SSC_CTL(n)			SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x000c)
#define ST40_SSC_IEN(n)			SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0010)
#define ST40_SSC_STA(n)			SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0014)
#define ST40_SSC_I2C(n)			SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0018)
#define ST40_SSC_SLAD(n)		SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x001c)
#define ST40_SSC_REP_START_HOLD(n)	SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0020)
#define ST40_SSC_START_HOLD(n)		SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0024)
#define ST40_SSC_REP_START_SETUP(n)	SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0028)
#define ST40_SSC_DATA_SETUP(n)		SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x002c)
#define ST40_SSC_STOP_SETUP(n)		SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0030)
#define ST40_SSC_BUS_FREE(n)		SH4_WORD_REG(ST40_SSC##n##_REGS_BASE + 0x0034)
#define ST40_SSC_CLR_STA(n)		SH4_DWORD_REG(ST40_SSC##n##_REGS_BASE + 0x0080)
#define ST40_SSC_AGFR(n)		SH4_DWORD_REG(ST40_SSC##n##_REGS_BASE + 0x0100)
#define ST40_SSC_PRSC(n)		SH4_DWORD_REG(ST40_SSC##n##_REGS_BASE + 0x0104)

/* Asynchronous Serial Controller control registers (all ST40 variants) */
#define ST40_ASC_BAUDRATE(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x00)
#define ST40_ASC_TXBUFFER(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x04)
#define ST40_ASC_RXBUFFER(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x08)
#define ST40_ASC_CONTROL(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x0c)
#define ST40_ASC_INTENABLE(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x10)
#define ST40_ASC_STATUS(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x14)
#define ST40_ASC_GUARDTIME(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x18)
#define ST40_ASC_TIMEOUT(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x1c)
#define ST40_ASC_TXRESET(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x20)
#define ST40_ASC_RXRESET(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x24)
#define ST40_ASC_RETRIES(n)		SH4_DWORD_REG(ST40_ASC##n##_REGS_BASE + 0x28)

/* EMISS/EMIPCISS register space */
#define ST40_EMISS_NAND_BCH_DMA_BASE	(ST40_EMISS_REGS_BASE + 0x0800)
#define ST40_EMISS_CONFIG		SH4_DWORD_REG(ST40_EMISS_REGS_BASE + 0x1000)
#define ST40_EMISS_NAND_HAMMING_NOT_BCH	(1ul<<6)	/* bit #6 */

#endif /* __ARCH_ST40_INCLUDE_ASM_ST40REG_H */
